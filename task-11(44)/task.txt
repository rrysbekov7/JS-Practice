const PiggyBank = {
    coins: {1: 0, 3: 0, 5: 0, 10: 0},

    addCoin: function(value) {
        switch (value) {
            case 1: case 3: case 5: case 10:
                this.coins[value]++;
                break;
            default:
                console.log('This is not a correct value!');
        }
    },

    showCoins: function() {
        for (const key in this.coins) {
            console.log(key, this.coins[key]);
        }
    },

    getTotal: function() {
        let total = 0;
        for (const key in this.coins) {
            total += key * this.coins[key];
        }
        return total;
    }
};

PiggyBank.addCoin(10);
PiggyBank.addCoin(5);
PiggyBank.addCoin(3);
PiggyBank.showCoins();
console.log(PiggyBank.getTotal());

=============================
class PiggyBank { TS
  private coins: {[key: number]: number}
  constructor() {
    this.coins =  {1: 0, 3: 0, 5: 0, 10: 0}
  }

  addCoin (value: number) {
    switch (value) {
      case 1: case 3: case 5: case 10:
        this.coins[value]++;
        break;
      default:
        console.log('This is not a correct value!');
    }
  }

  showCoins () {
    for (const key in this.coins) {
      console.log('key, this.coins[key]',key, this.coins[key]);
    }
  }

  getTotal () {
    let total = 0;
    for (const key in this.coins) {
      total += Number(key) * this.coins[key];
    }
    return total;
  }
};
const price = new PiggyBank();
price.addCoin(10);
price.addCoin(5);
price.addCoin(3);
price.showCoins();
console.log('getTotal',price.getTotal());

====================
example
class Renat {
  public points: {[key:number]: number}

  constructor() {
    this.points = {3: 70, 4: 90, 5: 40}
  }

  showPoints() {
    for (const point in this.points) {
      console.log(point + ' ' + this.points[point]);
    }
  }
}

const person = new Renat();
person.showPoints();
